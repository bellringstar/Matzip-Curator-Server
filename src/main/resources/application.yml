spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE}?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
#  sql:
#    init:
#      mode: always
#      schema-locations: classpath:schema.sql
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 50
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
    defer-datasource-initialization: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: matzipcurator-group
      auto-offset-reset: earliest

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.data.elasticsearch.client.WIRE: TRACE

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000  # 24 hours in milliseconds

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

app:
  cors:
    allowed-origins: http://localhost:3000
  elasticsearch:
    index-name: restaurants

naver:
  client:
    secret: ${NAVER_CLIENT_SECRET}
    id: ${NAVER_CLIENT_ID}